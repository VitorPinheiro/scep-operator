REGISTER STREAM Snotpublishing AS
PREFIX ex: <http://example.org/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <https://www.w3.org/2002/07/owl#>
PREFIX dc: <http://purl.org/dc/terms/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX sioc: <http://rdfs.org/sioc/ns#>
PREFIX schema: <http://schema.org/>
PREFIX nee: <http://www.ics.forth.gr/isl/oae/core#>
CONSTRUCT 
{     
    ex:tweetUsers ex:hasNotPublishedBy1day ?artist2 .
}
FROM STREAM <http://example.org> [RANGE 2d TUMBLING]
WHERE
{  
    {
        { 
            // Detecta um Tweet que fala sobre a dbr:Demi_Lovato
            ?tweet rdf:type sioc:Post .
            ?tweet dc:created ?date1 .    
            ?tweet schema:mentions ?entity .
            ?entity nee:hasMatchedURI ?artist1 .        
            ?entity nee:detectedAs ?name .

            FILTER (?artist1 = dbr:Demi_Lovato)
        }        
        {
            // NÃ£o acha outro tweet depois do anterior sobre a dbr:Demi_Lovato
            ?tweet2 rdf:type sioc:Post .
            ?tweet2 dc:created ?date2 .    
            ?tweet2 schema:mentions ?entity2 .
            ?entity2 nee:hasMatchedURI ?artist2 .        
            ?entity2 nee:detectedAs ?name2 .

            FILTER (?artist2 = dbr:Demi_Lovato)        
        }        
    }    
    FILTER ( ( ?date1 < ?date2 ) )        
}